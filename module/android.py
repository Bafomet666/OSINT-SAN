#!/usr/bin/python
# -*- coding: utf-8 -*-
# Developer by Bafomet
# –ù–µ —Å—Ç–∞–ª –æ–±—Ä–∞—â–∞—Ç—Å—è –ø—Ä—è–º–æ –≤ adb server, —Å–¥–µ–ª–∞–ª –∫–æ–¥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç—ã–º –∏ —á–∏—Ç–∞–µ–º—ã–º –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤ –≤ python,
# –≤–¥—Ä—É–≥ —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏ —Å–∫–∏–ª–∞ –ø–æ –Ω–∞—á–∞–ª—É.
from module.utils import COLORS
from module.utils.banner import show_banner
import requests
import time as t
import subprocess
import webbrowser

WHSL = C = "\033[39m"
ENDL = W = "\033[0m"
REDL = R = "\033[0;31m"
GNSL = G = "\033[1;34m"
GRNL = U = "\033[32;1m"
OKNL = O = "\033[96m"
FIOL = H = "\033[95m"
OKBL = Y = "\033[93m"

page_1 = f'''
        
 {REDL}[ {GNSL}1{REDL} ] {WHSL}  –ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞            {REDL}[ {GNSL}16{REDL} ] {WHSL} –û—Ç–∫—Ä—ã–≤–∞–µ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –Ω–∞ Google –ü–ª–∞–Ω–µ—Ç–∞ –ó–µ–º–ª—è 
 {REDL}[ {GNSL}2{REDL} ] {WHSL}  –û—Ç–∫–ª—é—á–∏—Ç—å –≤—Å–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞           {REDL}[ {GNSL}17{REDL} ] {WHSL} –ü—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ üíæ 
 {REDL}[ {GNSL}3{REDL} ] {WHSL}  –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –Ω–æ–≤–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ        {REDL}[ {GNSL}18{REDL} ] {GNSL} Show Mac/Inet
 {REDL}[ {GNSL}4{REDL} ] {WHSL}  –î–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ {GNSL}shell                 {REDL}[ {GNSL}19{REDL} ] {WHSL} –ò–∑–≤–ª–µ—á—å apk –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 {REDL}[ {GNSL}5{REDL} ] {WHSL}  –£—Å—Ç–∞–Ω–æ–≤–∫–∞{GNSL} apk{WHSL}                      {REDL}[ {GNSL}20{REDL} ] {GNSL} Get Battery Status
 {REDL}[ {GNSL}6{REDL} ] {WHSL}  –ó–∞–ø–∏—Å–∞—Ç—å –≤–∏–¥–µ–æ —Å —ç–∫—Ä–∞–Ω–∞            {REDL}[ {GNSL}21{REDL} ] {GNSL} Get Network Status
 {REDL}[ {GNSL}7{REDL} ] {WHSL}  –ü–æ–ª—É—á–∏—Ç—å {GNSL}screenshot üíæ             {REDL}[ {GNSL}22{REDL} ] {WHSL} –í–∫–ª—é—á–µ–Ω–∏–µ / –≤—ã–∫–ª—é—á–µ–Ω–∏–µ {GNSL}Wi-Fi
 {REDL}[ {GNSL}8{REDL} ] {WHSL}  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞          {REDL}[ {GNSL}23{REDL} ] {WHSL} –£–¥–∞–ª–∏—Ç—å –ø–∞—Ä–æ–ª—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
 {REDL}[ {GNSL}9{REDL} ] {WHSL}  –í—ã–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤                    {REDL}[ {GNSL}24{REDL} ] {WHSL} –≠–º—É–ª—è—Ü–∏—è –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à
 {REDL}[ {GNSL}10{REDL} ] {WHSL} –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞            {REDL}[ {GNSL}25{REDL} ] {WHSL} –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–õ–æ–≥–∏) üíæ
 {REDL}[ {GNSL}11{REDL} ] {WHSL} –£–¥–∞–ª–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ                 {REDL}[ {GNSL}26{REDL} ] {WHSL} –ú–∞—Å—Å–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ üíæ
 {REDL}[ {GNSL}12{REDL} ] {WHSL} –ü–æ–∫–∞–∑–∞—Ç—å –∂—É—Ä–Ω–∞–ª —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ üíæ      {REDL}[ {GNSL}27{REDL} ] {WHSL} –û—Ç–∫—Ä—ã—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ adb
 {REDL}[ {GNSL}13{REDL} ] {WHSL} Dump {GNSL}System Info üíæ                {REDL}[ {GNSL}28{REDL} ] {GNSL} Grab wpa_supplicant
 {REDL}[ {GNSL}14{REDL} ] {WHSL} –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π             {REDL}[ {GNSL}29{REDL} ] {WHSL} Port Forwarding
 {REDL}[ {GNSL}15{REDL} ] {WHSL} –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ               {REDL}[ {GNSL}30{REDL} ] {WHSL} –ü–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
 
 
 {REDL}[ {GNSL}99{REDL} ] {WHSL} –û–±—Ä–∞—Ç–Ω–æ –≤ –º–µ–Ω—é{GNSL}            {REDL}[ {GNSL}66{REDL} ]{WHSL} –û—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Å–æ–ª—å            {REDL}[ {GNSL}77{REDL} ]{WHSL} –û—Ç–∫–ª—é—á–∏—Ç—å —Å–µ—Ä–≤–µ—Ä

'''


def android_debug():
    show_banner(clear=True)
    print(f'\n{COLORS.WHSL}                             –†–∞–±–æ—á–µ–µ –æ–∫–Ω–æ –∫–æ–Ω—Å–æ–ª–∏ –æ—á–∏—â–µ–Ω–æ\n')
    print(f"\n{COLORS.WHSL}                             Start Android Debug Bridge server\n")
    print(f'\n{COLORS.WHSL} –í–Ω–∏–º–∞–Ω–∏–µ, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–∫–ª—é—á–∞–π—Ç–µ adb —Å–µ—Ä–≤–µ—Ä, \n –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ proxy –∏ –º–µ–Ω—è–π—Ç–µ mac address –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º.\n')
    print(page_1)
    import datetime
    global path_to_file

    ip = None
    while True:
        try:
            option = input(
                f"{REDL} ‚îî‚îÄ‚îÄ> {FIOL}Bafom—ëd production ‚îÄ‚îÄ>{GNSL} –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ–ø—Ü–∏–∏: {WHSL}")
        except KeyboardInterrupt:
            return

        if option == '1':
            if not ip:
                subprocess.call("adb devices -l", shell=True)
            else:
                subprocess.call("adb devices -l", shell=True)

        elif option == '2':
            if not ip:
                print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")
            else:
                subprocess.call("adb disconnect", shell=True)

        elif option == '3':
            print(f"\n –í–≤–µ–¥–∏—Ç–µ IP address.\n")
            try:
                ip = input(f" Android Debug Bridge {GNSL}[{REDL} connect_device {GNSL}]{ENDL}: ")
                port_device = input(f" –í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—Ç {GNSL}[{REDL} connect_device {GNSL}]{ENDL}: ")
                subprocess.call(f"adb tcpip '{port_device}' >> /dev/null", shell=True)
                subprocess.call(f"adb connect {ip}:{port_device}", shell=True)

            except KeyboardInterrupt:
                continue

        elif option == '4':
            if not ip:
                print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")
            else:
                subprocess.call(f"adb -s {ip} shell", shell=True)

        elif option == '5':
            if not ip:
                print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")
            else:
                 
                print(f" –í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ apk —Ñ–∞–π–ª—É. –ü—Ä–∏–º–µ—Ä /home/Apashe/Desktop/test.apk.\n")
                apk_location = input(f" Android Debug Bridge{GNSL}[{REDL} apk_install {GNSL}]{ENDL}:")
                subprocess.call("adb -s  " + ip + " install " + apk_location, shell=True)
                print(f" {GNSL}Apk –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

        elif option == '6':
            if not ip:
                print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")
            else:
                try:
                    print(f" –ó–∞–ø–∏—Å—å –≤–∏–¥–µ–æ –Ω–∞—á–∞–ª–∞—Å—å.")
                    print(f" –ù–∞–∂–º–∏ ctrl+c –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–ø–∏—Å–∏.\n")
                    subprocess.call(f"adb -s {ip} shell screenrecord /sdcard/demo.mp4", shell=True)
                    print(f"\n –£–∫–∞–∂–∏—Ç–µ, –≥–¥–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–∏–¥–µ–æ.\n –ü—Ä–∏–º–µ—Ä: /home/apashe/Desktop/sc.mp4\n")
                    place_location = input(f" Android Debug Bridge {GNSL}[{REDL}screen_record{GNSL}]{ENDL}:")
                    subprocess.call(f"adb -s {ip} pull /sdcard/screen.mp4 {place_location}", shell=True)
                    print(f" –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ.")
                    t.sleep(4)
                    print(page_1)

                except KeyboardInterrupt:
                    show_banner(clear=True)
                    print(f'\n{COLORS.WHSL}                             –†–∞–±–æ—á–µ–µ –æ–∫–Ω–æ –∫–æ–Ω—Å–æ–ª–∏ –æ—á–∏—â–µ–Ω–æ\n')
                    print(page_1)
                    continue  # /home/apashe/Desktop/sc.mp4

        elif option == '7':
            if not ip:
                print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")
            else:
                try:

                    save_data = datetime.datetime.today().strftime("%Y-%m-%d-%H.%M.%S")
                    filename = f'screenshot__{ip}__{save_data}'
                    path_to_file = 'report/' + filename
                    subprocess.call(f"adb -s {ip} shell screencap /sdcard/screen.png", shell=True)
                    print(f" –û–∂–∏–¥–∞–π—Ç–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∑–∞–≥—Ä—É–∑–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –≤ –ø–∞–ø–∫—É report\n")
                    subprocess.call(f"adb -s {ip} pull /sdcard/screen.png {path_to_file}", shell=True)
                    print(f" {GNSL} –°–∫—Ä–∏–Ω—à–æ—Ç {WHSL}—É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω.")
                    t.sleep(4)
                    print(page_1)

                except KeyboardInterrupt:
                    show_banner(clear=True)
                    print(f'\n{COLORS.WHSL}                             –†–∞–±–æ—á–µ–µ –æ–∫–Ω–æ –∫–æ–Ω—Å–æ–ª–∏ –æ—á–∏—â–µ–Ω–æ\n')
                    print(page_1)
                    continue

        elif option == '8':
            print(f"\n –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ ADB...\n")
            subprocess.call("adb kill-server >> /dev/null", shell=True)
            subprocess.call("adb start-server >> /dev/null", shell=True)
            print(f" –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω")
            t.sleep(4)
            print(page_1)

        elif option == '9':
            if not ip:
                print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")
            else:
                print(f" –í–≤–µ–¥–∏—Ç–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ.\n –ü—Ä–∏–º–µ—Ä: /sdcard/DCIM/demo.mp4 \n")
                file_location = input(f" Android Debug Bridge {GNSL}[{REDL} file_pull {GNSL}]{ENDL}:")
                 
                print(f" –ü—Ä–∏–º–µ—Ä: /home/apashe/Desktop\n –í–≤–µ–¥–∏—Ç–µ, –≥–¥–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª.\n")
                place_location = input(f" Android Debug Bridge {GNSL}[{REDL} file_pull {GNSL}]{ENDL}:")
                subprocess.call(f"adb -s {ip} pull {file_location} {place_location}", shell=True)
                print(page_1)

        elif option == '10':
            if not ip:
                print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")
            else:
                subprocess.call(f"adb -s {ip} reboot ", shell=True)
                print(f" –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ, –æ–∂–∏–¥–∞–π—Ç–µ 1 –º–∏–Ω—É—Ç—É ")
                t.sleep(4)
                print(page_1)

        elif option == '11':
            if not ip:
                print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")
            else:
                print(f" –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ pack_name \n")
                package_name = input(f" Android Debug Bridge {GNSL}[{REDL} app_delete {GNSL}]{ENDL}:")
                subprocess.call(f"adb -s {ip} unistall {package_name}", shell=True)

        elif option == '12':
            if not ip:
                print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")
            else:
                try:
                    print(f"\n –ù–∞–∂–º–∏ ctrl+c –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.\n")
                    t.sleep(4)
                    subprocess.call(f'adb -s {ip} logcat ', shell=True)

                except KeyboardInterrupt:
                    show_banner(clear=True)
                    print(f'\n{COLORS.WHSL}                             –†–∞–±–æ—á–µ–µ –æ–∫–Ω–æ –∫–æ–Ω—Å–æ–ª–∏ –æ—á–∏—â–µ–Ω–æ\n')
                    print(page_1)
                    continue

        elif option == '13':
            if not ip:
                print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")
            else:
                try:
                    print(f"\n{COLORS.REDL}  –ù–∞–∂–º–∏ ctrl+c –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.\n")
                    t.sleep(4)
                    subprocess.call(f"adb -s {ip} shell dumpsys", shell=True)

                except KeyboardInterrupt:
                    show_banner(clear=True)
                    print(f'\n{COLORS.WHSL}                             –†–∞–±–æ—á–µ–µ –æ–∫–Ω–æ –∫–æ–Ω—Å–æ–ª–∏ –æ—á–∏—â–µ–Ω–æ\n')
                    print(page_1)
                    continue

        elif option == '14':
            if not ip:
                print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")
            subprocess.call(f"adb -s {ip} shell pm list packages -f", shell=True)

        elif option == '15':
            if not ip:
                print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")
             
            print(f"  –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n")
            package_name = input(f" Android Debug Bridge {GNSL}[{REDL} –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è {GNSL}]{ENDL}:")
            subprocess.call(f"adb -s {ip} shell monkey -p " + package_name + " -v 500", shell=True)

        elif option == '16':
            option = input(f"\n{COLORS.FIOL} –û—Ç–∫—Ä—ã–≤–∞–µ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –Ω–∞ –∫–∞—Ä—Ç–µ (y/n)?:{COLORS.REDL} ")
            show_banner(clear=True)
            if option == "y":
                data = requests.get(
                    "http://ip-api.com/json/" + ip + "?fields=status,message,continent,continentCode,country,countryCode,region,regionName,city,district,zip,lat,lon,timezone,currency,isp,org,as,asname,reverse,mobile,proxy")
                resp = data.json()
                if resp["status"] == "fail":
                    print(f'{COLORS.WHSL} –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n')

                print(f"{COLORS.WHSL} Latitude:{COLORS.FIOL} " + str(resp["lat"]))
                print(f"{COLORS.WHSL} Longitude:{COLORS.FIOL} " + str(resp["lon"]))
                print(f"{COLORS.WHSL} –ü—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å –∫ –º–æ–±–∏–ª—å–Ω–æ–º—É –æ–ø–µ—Ä–∞—Ç–æ—Ä—É:{COLORS.FIOL} " + str(resp["mobile"]))
                print(f"{COLORS.GNSL} –ü—Ä–æ–∫—Å–∏:{COLORS.FIOL} " + str(resp["proxy"]))
                webbrowser.open(f"https://earth.google.com/web/search/{resp['lat']}+{resp['lon']}")
                print(f"\n{COLORS.REDL} Status: " + resp["status"])

            elif option == "n":
                return

        elif option == '17':
            show_banner(clear=True)
            subprocess.call(f'adb shell getprop | grep -e"model\|version.sdk\|manufacturer\|hardware\|platform\|revision\|serialno\|product.name\|brand"', shell=True)
            print(page_1)

        elif option == '18':
            if not ip:
                print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")
            else:
                subprocess.call(f"adb -s {ip} shell ip address show wlan0", shell=True)

        elif option == '19':
            if not ip:
                print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")
             
            print(f" –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ apk.\n")
            package_name = input(f" Package_name - Android Debug Bridge: ")
            subprocess.call(f"adb -s {ip} shell pm path " + package_name, shell=True)
             
            print(f" –í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ apk –Ω–∞ —É—Å—Ç–æ–π—Å—Ç–≤–µ.\n")
            path = input(" Android Debug Bridge: ")
             
            print(f" –í–≤–µ–¥–∏—Ç–µ –º–µ—Å—Ç–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è apk.\n")
            location = input(f" Android Debug Bridge pull_apk:")
            subprocess.call(f"adb -s {ip} pull {path} {location}", shell=True)
            t.sleep(5)
            print(page_1)

        elif option == '20':
            if not ip:
                print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")
            else:
                subprocess.call(f"adb -s {ip} shell dumpsys battery", shell=True)

        elif option == '21':
            if not ip:
                print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")
            else:
                subprocess.call(f"adb -s {ip} shell netstat", shell=True)

        elif option == '22':
            if not ip:
                print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")
            else:
                print(f" –ß—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –≤–∫–ª—é—á–∏—Ç—å WiFi, —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–æ.")
                 
                on_off = input(f"{GNSL}   [{REDL} + {GNSL}]{WHSL} –•–æ—Ç–∏—Ç–µ –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å WiFi on/off{REDL} :")
                if on_off == 'off':
                    command = " shell svc wifi disable"
                else:
                    command = " shell svc wifi enable"
                subprocess.call(f"adb -s {ip} {command}", shell=True)

        elif option == '23':
            if not ip:
                print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")
            else:
                 
                print(f"****************** REMOVING PASSWORD ******************")
                subprocess.call(f"adb -s {ip} shell su 0 'rm /data/system/gesture.key'", shell=True)
                subprocess.call(f"adb -s {ip} shell su 0 'rm /data/system/locksettings.db'", shell=True)
                subprocess.call(f"adb -s {ip} shell su 0 'rm /data/system/locksettings.db-wal'", shell=True)
                subprocess.call(f"adb -s {ip} shell su 0 'rm /data/system/locksettings.db-shm'", shell=True)
                print(f"****************** REMOVING PASSWORD ******************")

        elif option == '24':
            if not ip:
                print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")

            print(f'''
 {GNSL}[ {REDL}0{GNSL} ]  {WHSL}–ö–Ω–æ–ø–∫–∞_UNKNOWN       {GNSL}[ {REDL}21{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_DPAD_LEFT      {GNSL}[ {REDL}42{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_N            {GNSL}[ {REDL}63{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_SYM 
 {GNSL}[ {REDL}1{GNSL} ]  {WHSL}–ö–Ω–æ–ø–∫–∞_MENU          {GNSL}[ {REDL}22{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_DPAD_RIGHT     {GNSL}[ {REDL}43{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_O            {GNSL}[ {REDL}64{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_EXPLORER
 {GNSL}[ {REDL}2{GNSL} ]  {WHSL}–ö–Ω–æ–ø–∫–∞_SOFT_RIGHT    {GNSL}[ {REDL}23{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_DPAD_CENTER    {GNSL}[ {REDL}44{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_P            {GNSL}[ {REDL}65{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_ENVELOPE
 {GNSL}[ {REDL}3{GNSL} ]  {WHSL}–ö–Ω–æ–ø–∫–∞_HOME          {GNSL}[ {REDL}24{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_VOLUME_UP      {GNSL}[ {REDL}45{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_Q            {GNSL}[ {REDL}66{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_ENTER
 {GNSL}[ {REDL}4{GNSL} ]  {WHSL}–ö–Ω–æ–ø–∫–∞_BACK          {GNSL}[ {REDL}25{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_VOLUME_DOWN    {GNSL}[ {REDL}46{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_R            {GNSL}[ {REDL}67{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_DEL
 {GNSL}[ {REDL}5{GNSL} ]  {WHSL}–ö–Ω–æ–ø–∫–∞_CALL          {GNSL}[ {REDL}26{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_POWER          {GNSL}[ {REDL}47{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_S            {GNSL}[ {REDL}68{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_GRAVE
 {GNSL}[ {REDL}6{GNSL} ]  {WHSL}–ö–Ω–æ–ø–∫–∞_ENDCALL       {GNSL}[ {REDL}27{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_CAMERA         {GNSL}[ {REDL}48{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_T            {GNSL}[ {REDL}69{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_MINUS
 {GNSL}[ {REDL}7{GNSL} ]  {WHSL}–ö–Ω–æ–ø–∫–∞_0             {GNSL}[ {REDL}28{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_CLEAR          {GNSL}[ {REDL}49{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_U            {GNSL}[ {REDL}70{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_EQUALS
 {GNSL}[ {REDL}8{GNSL} ]  {WHSL}–ö–Ω–æ–ø–∫–∞_1             {GNSL}[ {REDL}29{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_A              {GNSL}[ {REDL}50{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_V            {GNSL}[ {REDL}71{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_LEFT_BRACKET
 {GNSL}[ {REDL}9{GNSL} ]  {WHSL}–ö–Ω–æ–ø–∫–∞_2             {GNSL}[ {REDL}30{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_B              {GNSL}[ {REDL}51{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_W            {GNSL}[ {REDL}72{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_RIGHT_BRACKET
 {GNSL}[ {REDL}10{GNSL} ] {WHSL}–ö–Ω–æ–ø–∫–∞_3             {GNSL}[ {REDL}31{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_C              {GNSL}[ {REDL}52{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_X            {GNSL}[ {REDL}73{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_BACKSLASH
 {GNSL}[ {REDL}11{GNSL} ] {WHSL}–ö–Ω–æ–ø–∫–∞_4             {GNSL}[ {REDL}32{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_D              {GNSL}[ {REDL}53{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_Y            {GNSL}[ {REDL}74{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_SEMICOLON
 {GNSL}[ {REDL}12{GNSL} ] {WHSL}–ö–Ω–æ–ø–∫–∞_5             {GNSL}[ {REDL}33{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_E              {GNSL}[ {REDL}54{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_Z            {GNSL}[ {REDL}75{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_APOSTROPHE
 {GNSL}[ {REDL}13{GNSL} ] {WHSL}–ö–Ω–æ–ø–∫–∞_6             {GNSL}[ {REDL}34{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_F              {GNSL}[ {REDL}55{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_COMMA        {GNSL}[ {REDL}76{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_SLASH
 {GNSL}[ {REDL}14{GNSL} ] {WHSL}–ö–Ω–æ–ø–∫–∞_7             {GNSL}[ {REDL}35{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_G              {GNSL}[ {REDL}56{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_PERIOD       {GNSL}[ {REDL}77{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_AT
 {GNSL}[ {REDL}15{GNSL} ] {WHSL}–ö–Ω–æ–ø–∫–∞_8             {GNSL}[ {REDL}36{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_H              {GNSL}[ {REDL}57{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_ALT_LEFT     {GNSL}[ {REDL}78{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_NUM
 {GNSL}[ {REDL}16{GNSL} ] {WHSL}–ö–Ω–æ–ø–∫–∞_9             {GNSL}[ {REDL}37{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_I              {GNSL}[ {REDL}58{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_ALT_RIGHT    {GNSL}[ {REDL}79{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_HEADSETHOOK
 {GNSL}[ {REDL}17{GNSL} ] {WHSL}–ö–Ω–æ–ø–∫–∞_STAR          {GNSL}[ {REDL}38{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_J              {GNSL}[ {REDL}59{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_SHIFT_LEFT   {GNSL}[ {REDL}80{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_FOCUS
 {GNSL}[ {REDL}18{GNSL} ] {WHSL}–ö–Ω–æ–ø–∫–∞_POUND         {GNSL}[ {REDL}39{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_K              {GNSL}[ {REDL}60{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_SHIFT_RIGHT  {GNSL}[ {REDL}81{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_PLUS
 {GNSL}[ {REDL}19{GNSL} ] {WHSL}–ö–Ω–æ–ø–∫–∞_DPAD_UP       {GNSL}[ {REDL}40{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_L              {GNSL}[ {REDL}61{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_TAB          {GNSL}[ {REDL}82{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_MENU
 {GNSL}[ {REDL}20{GNSL} ] {WHSL}–ö–Ω–æ–ø–∫–∞_DPAD_DOWN     {GNSL}[ {REDL}41{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_M              {GNSL}[ {REDL}62{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_SPACE        {GNSL}[ {REDL}83{GNSL} ]{WHSL}  –ö–Ω–æ–ø–∫–∞_NOTIFICATION
 ''')
            print(f" –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–Ω–æ–ø–∫–∏.\n")
            num = input(f" Android Debug Bridge {GNSL}[{REDL} –ö–Ω–æ–ø–∫–∞ {GNSL}]{ENDL}: ")
            subprocess.call(f"adb -s {ip} shell input keyevent {num}", shell=True)
            print(f" –í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –∫–Ω–æ–ø–∫—É")
            t.sleep(4)
            print(page_1)

        elif option == '25':
            if not ip:
                print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")
            else:
                try:
                    print(f' –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏ ctrl + c')
                    t.sleep(4)
                    subprocess.call(f"adb -s {ip} shell dumpsys activity", shell=True)

                except KeyboardInterrupt:
                    show_banner(clear=True)
                    print(f'\n{COLORS.WHSL}                             –†–∞–±–æ—á–µ–µ –æ–∫–Ω–æ –∫–æ–Ω—Å–æ–ª–∏ –æ—á–∏—â–µ–Ω–æ\n')
                    print(page_1)
                    continue

        elif option == "26":
            try:
                print(f" –ü—Ä–∏–º–µ—Ä –ø—É—Ç–∏: /home/Apashe/Desktop/test.txt\n")
                path_to_ips = input(f" –í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É txt —Ñ–∞–π–ª—É —Å IP –∞–¥—Ä–µ—Å–∞–º–∏:")
            except KeyboardInterrupt:
                continue

            with open(path_to_ips, "r") as f:
                ip_adb_addresses = f.read().splitlines()

            for ip_address in ip_adb_addresses:
                subprocess.call(f" adb connect {ip_address}:{5555}", shell=True)

        elif option == '27':
            urls = [
                "http://android-tip.com/soveti_i_poleznoe/77-adb-dlya-chaynikov-chast-1.html",
                "https://irongamers.ru/forum/faq/izuchaem-android-desjat-osnovnyh-komand-adb-i-fastboot-kotorye-vy-dolzhny-znat-d",
                "https://docs.microsoft.com/ru-ru/dual-screen/android/emulator/adb",
                "https://softandroid.net/2020/01/05/adb-%D0%B8%D0%BB%D0%B8-android-debug-bridge-%D0%BE%D0%B1%D1%8A%D1%8F%D1%81%D0%BD%D1%8F%D1%8E-%D0%BD%D0%B0-%D0%BF%D0%B0%D0%BB%D1%8C%D1%86%D0%B0%D1%85-%D1%87%D1%82%D0%BE-%D1%8D%D1%82%D0%BE-%D0%B7/",
                "https://www.youtube.com/watch?v=QOXmNDXDWhM",
            ]
            for url in urls:
                webbrowser.open(url)
                print(page_1)

        elif option == '28':
            try:
                print(f" –í–≤–µ–¥–∏—Ç–µ, –≥–¥–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª.\n")
                location = input(f" Android Debug Bridge {GNSL}[{REDL} wpa_grub {GNSL}]{ENDL}:")
                subprocess.call(f"adb -s {ip} shell su -c 'cp /data/misc/wifi/wpa_supplicant.conf /sdcard/'",
                                shell=True)
                subprocess.call(f"adb -s {ip} pull /sdcard/wpa_supplicant.conf {location}", shell=True)

            except KeyboardInterrupt:
                if not ip:
                    print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")

        elif option == '29':
            if not ip:
                print(f"\n{REDL} –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n")
            else:

                print(f" –í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—Ç –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ.\n")
                port_device = input(f" Android Debug Bridge port_device: ")

                print(f" –í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—Ç –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏.\n")
                forward_port = input(" Android Debug Bridge forward_port: ")
                subprocess.call(f"adb -s {ip} forward tcp:" + port_device + " tcp:" + forward_port, shell=True)

        elif option == '30':
            subprocess.call(f"adb -s {ip} shell input keyevent {27}", shell=True)
            save_data = datetime.datetime.today().strftime("%Y-%m-%d-%H.%M.%S")
            filename = f'photo__{ip}__{save_data}'
            path_to_file = 'report/' + filename
            subprocess.call(f"adb -s {ip} shell screencap /sdcard/screen.png", shell=True)
            print(f"\n –û–∂–∏–¥–∞–π—Ç–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∑–∞–≥—Ä—É–∑–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –≤ –ø–∞–ø–∫—É report\n –ú–æ–∂–µ—Ç –±—ã—Ç—å —Ç–∞–∫–æ–µ —á—Ç–æ –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –Ω–µ—Ç –∫–∞–º–µ—Ä—ã,\n –∫–∞–∫ —É smartTV\n")
            subprocess.call(f"adb -s {ip} pull /sdcard/screen.png {path_to_file}", shell=True)

        elif option == '66':
            show_banner(clear=True)
            print(f'\n{COLORS.WHSL}                             –†–∞–±–æ—á–µ–µ –æ–∫–Ω–æ –∫–æ–Ω—Å–æ–ª–∏ –æ—á–∏—â–µ–Ω–æ\n')
            print(page_1)

        elif option == '77':
            subprocess.call("adb disconnect >> /dev/null", shell=True)
            subprocess.call("adb kill-server >> /dev/null", shell=True)
            show_banner(clear=True)
            print(f'\n{COLORS.WHSL}                             –†–∞–±–æ—á–µ–µ –æ–∫–Ω–æ –∫–æ–Ω—Å–æ–ª–∏ –æ—á–∏—â–µ–Ω–æ\n')
            print(f' –°–µ—Ä–≤–µ—Ä android debug –æ—Ç–∫–ª—é—á–µ–Ω')
            print(page_1)

        elif option == '99':
            show_banner(clear=True)
            print(f'\n{COLORS.WHSL}                             –†–∞–±–æ—á–µ–µ –æ–∫–Ω–æ –∫–æ–Ω—Å–æ–ª–∏ –æ—á–∏—â–µ–Ω–æ\n')
            return

        else:
            print(page_1)
